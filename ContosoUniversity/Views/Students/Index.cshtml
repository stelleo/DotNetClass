@model ContosoUniversity.viewHelpers.PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Students</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="searchString" value="@ViewData["searchString"]"/>
            <input type="submit" value="Search" class="btn btn-default"/>
            &nbsp;&nbsp;<a asp-action="Index">Reset (show all)</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model[0].LastName)
                    </a>
                </th>

                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayName("First Name")
                    </a>
@*                    @Html.DisplayNameFor(model => model[0].FirstMidName)*@
                </th>

                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSortParam"
                        asp-route-currentFilter="@ViewData["CurrentFilter"]">
                       @Html.DisplayNameFor(model => model[0].EnrollmentDate)
                    </a>
               </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">&nbsp;Edit </a> |
                <a asp-action="Details" asp-route-id="@item.ID">&nbsp;Details </a> |
                <a asp-action="Delete" asp-route-id="@item.ID">&nbsp;Delete </a>
            </td>
        </tr>

    }
    </tbody>
</table>

@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["currentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
